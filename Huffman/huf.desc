For my implementation, I used a linked list to store the huffman codes for compression and a binary tree for decompression. I wrote all of the data from the input file to a large malloced character pointer. For compress, I went through the large character pointer and got the byte of each character and used the OR operator on an unsigned char to write the bit of the character into the char. Then I used fputc to put the character into the output. I do a similar process for decompress, except I iterated through a tree to retrieve the huffman codes.